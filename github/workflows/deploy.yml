name: Deploy WordPress Application

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create tar.gz package
        run: |
          tar -czf app_$(date +%Y%m%d).tar.gz .
      
      - name: Upload to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp app_$(date +%Y%m%d).tar.gz s3://omar-app-bucket/
      
      - name: Deploy to EC2
        run: |
          aws ec2 describe-instances --filters Name=tag:env,Values=omar --query 'Reservations[*].Instances[*].[PublicIpAddress]' --output text > ips.txt
          while read ip; do
            ssh -o "StrictHostKeyChecking no" -i ~/.ssh/tet.pem ec2-user@$ip "aws s3 cp s3://omar-app-bucket/app_$(date +%Y%m%d).tar.gz /tmp && tar -xzf /tmp/app_$(date +%Y%m%d).tar.gz -C /var/www/html/"
          done < ips.txt

      - name: Cleanup old files in S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 ls s3://omar-app-bucket/ | awk '{print $4}' | while read file; do
            creation_date=$(aws s3api head-object --bucket omar-app-bucket --key $file --query "LastModified" --output text)
            creation_date_epoch=$(date -d "$creation_date" +%s)
            current_date_epoch=$(date +%s)
            age_days=$(( ($current_date_epoch - $creation_date_epoch) / 86400 ))
            if [ $age_days -gt 7 ]; then
              aws s3 rm s3://omar-app-bucket/$file
            fi
          done
