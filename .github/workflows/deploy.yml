name: Deploy WordPress

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Compress application
      run: |
        mkdir -p temp_archive
        rsync -a --exclude=temp_archive --exclude='.git' --exclude='.github' ./ temp_archive/
        tar -czf app_$(date +'%Y-%m-%d').tar.gz -C temp_archive .
        rm -rf temp_archive

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Upload application to S3 (Public Bucket)
      run: |
        aws s3 cp app_$(date +'%Y-%m-%d').tar.gz s3://${{ secrets.S3_BUCKET_PUBLIC }}/

    - name: Check for existing Instance Refresh
      id: check-refresh
      run: |
        existing_refresh=$(aws autoscaling describe-instance-refreshes --auto-scaling-group-name ${{ secrets.ASG_NAME }} --query 'InstanceRefreshes[?Status==`InProgress`]' --output text)
        if [ -n "$existing_refresh" ]; then
          echo "Instance Refresh is already in progress. Exiting."
          exit 0
        fi

    - name: Refresh Auto Scaling Group
      if: steps.check-refresh.outcome == 'success'
      run: |
        aws autoscaling start-instance-refresh --auto-scaling-group-name ${{ secrets.ASG_NAME }}

    - name: Clean old builds from S3
      run: |
        aws s3 ls s3://${{ secrets.S3_BUCKET_PUBLIC }}/ | awk '{print $4}' | while read file; do
          if [[ $file == app_*.tar.gz ]]; then
            build_date=$(echo $file | sed -E 's/app_([0-9]{4})([0-9]{2})([0-9]{2}).tar.gz/\1-\2-\3/')
            if date -d "$build_date" >/dev/null 2>&1; then
              build_timestamp=$(date -d "$build_date" +%s)
              current_timestamp=$(date +%s)
              diff=$(( (current_timestamp - build_timestamp) / 86400 ))
              if [[ $diff -gt 7 ]]; then
                aws s3 rm s3://${{ secrets.S3_BUCKET_PUBLIC }}/$file
              fi
            else
              echo "Skipping file with invalid date format: $file"
            fi
          fi
        done
