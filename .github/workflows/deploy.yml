name: Deploy Application

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Package the repository
      - name: Package application
        run: |
          mkdir -p /tmp/app_package
          cp -R . /tmp/app_package
          tar --exclude='/tmp/app_package/.git' -czf app_$(date +%Y%m%d).tar.gz -C /tmp/app_package .

      # 3. Upload the package to S3
      - name: Upload to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp app_$(date +%Y%m%d).tar.gz s3://omar-app-private-bucket/

      # 4. Update ASG instances with the new package
      - name: Deploy to ASG
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          INSTANCE_IDS=$(aws autoscaling describe-auto-scaling-groups \
            --auto-scaling-group-name omar-alb \
            --query "AutoScalingGroups[0].Instances[].InstanceId" --output text)

          for INSTANCE_ID in $INSTANCE_IDS; do
            PUBLIC_IP=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID \
              --query "Reservations[0].Instances[0].PublicIpAddress" --output text)

            echo "Deploying to instance $INSTANCE_ID with IP $PUBLIC_IP"

            ssh -i /path/to/key.pem -o StrictHostKeyChecking=no ec2-user@$PUBLIC_IP \
            "aws s3 cp s3://omar-app-private-bucket/app_$(date +%Y%m%d).tar.gz /tmp/ && \
            sudo tar -xzf /tmp/app_$(date +%Y%m%d).tar.gz -C /var/www/html && \
            sudo systemctl restart httpd"
          done

      # 5. Verify deployment
      - name: Verify application
        run: |
          INSTANCE_IDS=$(aws autoscaling describe-auto-scaling-groups \
            --auto-scaling-group-name omar-alb \
            --query "AutoScalingGroups[0].Instances[].InstanceId" --output text)

          for INSTANCE_ID in $INSTANCE_IDS; do
            PUBLIC_IP=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID \
              --query "Reservations[0].Instances[0].PublicIpAddress" --output text)

            curl -s http://$PUBLIC_IP/index.php | grep "Welcome to WordPress" || exit 1
          done
