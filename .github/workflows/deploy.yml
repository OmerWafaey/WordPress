name: Deploy WordPress

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Compress application
      run: tar -czf app_$(date +'%Y-%m-%d').tar.gz ./

    - name: Upload application to S3 (Public Bucket)
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
      run: |
        aws s3 cp app_$(date +'%Y-%m-%d').tar.gz s3://${{ secrets.S3_BUCKET_PUBLIC }}/

    - name: Refresh Auto Scaling Group
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
      run: |
        aws autoscaling start-instance-refresh --auto-scaling-group-name ${{ secrets.ASG_NAME }}

    - name: Clean old builds from S3
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
      run: |
        aws s3 ls s3://${{ secrets.S3_BUCKET_PUBLIC }}/ | awk '{print $4}' | while read file; do
          if [[ $file == app_*.tar.gz ]]; then
            build_date=$(echo $file | sed 's/app_\([0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}\).tar.gz/\1/')
            build_timestamp=$(date -d $build_date +%s)
            current_timestamp=$(date +%s)
            diff=$(( (current_timestamp - build_timestamp) / 86400 ))
            if [[ $diff -gt 7 ]]; then
              aws s3 rm s3://${{ secrets.S3_BUCKET_PUBLIC }}/$file
            fi
          fi
        done
